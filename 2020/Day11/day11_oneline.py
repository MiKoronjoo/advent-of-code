print(*(lambda mp, cal: (cal(mp, (lambda x, y, mp: [mp[x + i][y + j] for i in range(-1, 2) for j in range(-1, 2) if (i or j) and (0 <= x + i < len(mp) and 0 <= y + j < len(mp[0]))].count('#')), 3, cal), cal(mp, (lambda x, y, mp: sum(next((mp[x + i * z][y + j * z] for z in range(1, len(mp)) if 0 <= x + i * z < len(mp) and 0 <= y + j * z < len(mp[0]) and mp[x + i * z][y + j * z] != '.'), '') == '#' for i in range(-1, 2) for j in range(-1, 2) if i or j)), 4, cal)))([list(line) for line in open('inp11').read().split()], (lambda mp, f, n, rec: (lambda mp, f, n, rec, temp: sum(mp, []).count('#') if mp == temp else rec(__import__('copy').deepcopy(temp), f, n, rec))(mp, f, n, rec, [[(lambda res, x, y, n, mp: '#' if mp[x][y] == 'L' and res == 0 else 'L' if mp[x][y] == '#' and res > n else mp[x][y])(f(x, y, mp), x, y, n, mp) for y in range(len(mp[0]))] for x in range(len(mp))]))), sep='\n')