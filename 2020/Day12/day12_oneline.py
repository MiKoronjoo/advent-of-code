print(*((lambda run, cmds: (run([0, 0, 0], cmds, (lambda self, num, e, n: e(self, num, e, n) if self[0] == 0 else e(self, -num, e, n) if self[0] == 180 else n(self, -num, e, n) if self[0] == 90 else n(self, num, e, n)), (lambda self, num, e, n: self.__setitem__(1, self[1] + num)), (lambda self, num, e, n: self.__setitem__(2, self[2] + num)), (lambda self, deg, e, n: self.__setitem__(0, (self[0] + deg) % 360))), run([[10, 1], 0, 0], cmds, (lambda self, num, e, n: self.__setitem__(1, self[1] + self[0][0] * num) or self.__setitem__(2, self[2] + self[0][1] * num)), (lambda self, num, e, n: self[0].__setitem__(0, num + self[0][0])), (lambda self, num, e, n: self[0].__setitem__(1, num + self[0][1])), (lambda self, deg, e, n: [self.__setitem__(0, [self[0][1], -self[0][0]]) for _ in range(deg % 360 // 90)]))))((lambda ship, cmds, f, e, n, r: [(lambda ship, c, num, f, e, n, r: {'f': f, 'e': e, 'n': n, 'r': r}[c](ship, num, e, n))(ship, cmd[0].lower(), int(cmd[1:]), f, e, n, r) for cmd in cmds] and abs(ship[1]) + abs(ship[2])), open('inp12').read().replace('L', 'R-').replace('S', 'N-').replace('W', 'E-').split())), sep='\n')